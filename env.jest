# env.jest
 
################################################################################
# Environment variables with values for running the tests. This file can be
# committed to git, since it's only used for testing, and won't contain secrets.
################################################################################
 
# HTTP Port (defaults to 8080)
PORT=8080
 
# Disable logs in tests. If you need to see more detail, change this to `debug`
LOG_LEVEL=silent

# .htpasswd file to use in testing
HTPASSWD_FILE=tests/.htpasswd

Create a config file for Jest, jest.config.js, in the root of the project. This config file will load our env.jest test environment variables and set various options for how the tests will run:
// jest.config.js
 
// Get the full path to our env.jest file
const path = require('path');
const envFile = path.join(__dirname, 'env.jest');
 
// Read the environment variables we use for Jest from our env.jest file
require('dotenv').config({ path: envFile });
 
// Log a message to remind developers how to see more detail from log messages
console.log(`Using LOG_LEVEL=${process.env.LOG_LEVEL}. Use 'debug' in env.jest for more detail`);
 
// Set our Jest options, see http://localhost:8080
module.exports = {
  verbose: true,
  testTimeout: 5000,
};
Update your eslint.config.mjs configuration file so that ESLint knows that we're using Jest (otherwise, ESLint will give you lots of lint errors when you use Jest's global functions in your tests). We do this by adding another env setting for jest:
// eslint.config.mjs
 
import globals from 'globals';
import pluginJs from '@eslint/js';

# Add placeholder Cognito variables for testing
# Use any valid format, e.g., us-east-1_xxxxxxxxx
#AWS_COGNITO_POOL_ID=us-east-1_jesttest
# Use any 26-character alphanumeric string
#AWS_COGNITO_CLIENT_ID=jesttestclientid1234567890
 
export default [
  { files: ['**/*.js'], languageOptions: { sourceType: 'commonjs' } },
  {
    languageOptions: {
      globals: {
        ...globals.node,
        ...globals.jest,
      },
    },
  },
  pluginJs.configs.recommended,
];
